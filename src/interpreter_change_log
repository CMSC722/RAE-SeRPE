1) make interpreter yield action/command nodes
  x make it so PlanningProblem can load multiple meth_parse files
  x (task|action, id, arguments (as tuple -- for actions, sv's as first arg))
  x question: will sv's change for me to, if an action model modifies sv's?
  x get rid of action model params
  x fix environment representation so that incoming arguments are transformed
    into Interpreter vals
  - retest/debug
  - finish tests
2) meth parser
  x make sure parses correctly -- preconditions and all
3) SeRPE:
  - SeRPE should make a copy of the state before invoking an
    action, because the action may change the state but then
    return False, indicating the action failed (or was not
    applicable) -- and in that case any changes the action
    made should be discarded, and the state replaced with
    what it was before invoking the action
4) parsing problem representation:
  - allow path to directory -- test whether directory or zip file
5) planning domain file representation:
  - allow domains and problems to be defined separately (apart)
  - hence pp.zip = just the domain
  - s0 + goal specified in separate file -- or maybe through the UI?
