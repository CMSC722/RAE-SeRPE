method m1-move-to-room(r,loc1,loc2):
  task: move-to-room(r,loc2)
	pre:
  =BEGIN
def preconditions(state):
  return state['state_vars']['loc'][(r,)] == loc1
  =END
  body:
    if search(r,loc2) then
      exit-room(r,loc1)
		  move(r,loc1,loc2)
		  enter-room(r,loc2)
	  else
		  move-towards(r,loc1,loc2)
    end

method m1-enter-room(r,loc1,d,loc2):
  task: enter-room(r,d,loc2)
	pre:
	=BEGIN
def preconditions(state):
  return True
  =END
  body:
    if search(r,d) then
		  enter(r,d)
		end

method m1-exit-room(r,loc1,d,loc2):
  task: exit-room(r,d,loc2)
	pre:
	=BEGIN
def preconditions(state):
  return True
  =END
  body:
    if search(r,d) then
      exit(r,d)
    end

method m1-move-towards(r,loc1,loc2):
  task: move-towards(r,loc2)
	pre:
	=BEGIN
def preconditions(state):
  return state['state_vars']['loc'][(r,)] == loc1
  =END
    body:
      t=naive-path(r,loc1,loc2)
      if t=='empty' then
        fail
      else
        while !(t == 'empty') do
		      if search(r, poll(t)) then
			       move(r,loc1,pop(t))
		      else
			       move-towards(r,loc1,pop(t))
			    end
        end
	    end
