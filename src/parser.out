Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    SVS

Grammar

Rule 0     S' -> start
Rule 1     start -> obj rig s0 goal
Rule 2     obj -> OBJ COLON obj_sets
Rule 3     rig -> RIG COLON rig_rels
Rule 4     s0 -> S0 COLON initial_state_atoms
Rule 5     goal -> GOAL COLON goal_state_atoms
Rule 6     obj_sets -> <empty>
Rule 7     obj_sets -> ID EQUALS obj_set obj_sets
Rule 8     obj_set -> LBRACK INT RBRACK
Rule 9     obj_set -> LBRACK FLOAT RBRACK
Rule 10    obj_set -> LBRACK BOOL RBRACK
Rule 11    obj_set -> LBRACK NIL RBRACK
Rule 12    obj_set -> LBRACK obj_atoms
Rule 13    obj_atoms -> RBRACK
Rule 14    obj_atoms -> obj_atom RBRACK
Rule 15    obj_atoms -> obj_atom COMMA obj_atoms
Rule 16    obj_atom -> ID
Rule 17    obj_atom -> INT
Rule 18    obj_atom -> FLOAT
Rule 19    obj_atom -> TRUE
Rule 20    obj_atom -> FALSE
Rule 21    obj_atom -> NIL
Rule 22    rig_rels -> <empty>
Rule 23    rig_rels -> ID EQUALS rig_rel rig_rels
Rule 24    rig_rel -> LBRACK tuples
Rule 25    tuples -> RBRACK
Rule 26    tuples -> tuple RBRACK
Rule 27    tuples -> tuple COMMA tuples
Rule 28    tuple -> LPAREN ids
Rule 29    ids -> RPAREN
Rule 30    ids -> ID RPAREN
Rule 31    ids -> ID COMMA ids
Rule 32    initial_state_atoms -> <empty>
Rule 33    initial_state_atoms -> ID LPAREN ids EQUALS obj_atom initial_state_atoms
Rule 34    goal_state_atoms -> <empty>
Rule 35    goal_state_atoms -> ID LPAREN ids EQUALS ID goal_state_atoms

Terminals, with rules where they appear

BOOL                 : 10
COLON                : 2 3 4 5
COMMA                : 15 27 31
EQUALS               : 7 23 33 35
FALSE                : 20
FLOAT                : 9 18
GOAL                 : 5
ID                   : 7 16 23 30 31 33 35 35
INT                  : 8 17
LBRACK               : 8 9 10 11 12 24
LPAREN               : 28 33 35
NIL                  : 11 21
OBJ                  : 2
RBRACK               : 8 9 10 11 13 14 25 26
RIG                  : 3
RPAREN               : 29 30
S0                   : 4
SVS                  : 
TRUE                 : 19
error                : 

Nonterminals, with rules where they appear

goal                 : 1
goal_state_atoms     : 5 35
ids                  : 28 31 33 35
initial_state_atoms  : 4 33
obj                  : 1
obj_atom             : 14 15 33
obj_atoms            : 12 15
obj_set              : 7
obj_sets             : 2 7
rig                  : 1
rig_rel              : 23
rig_rels             : 3 23
s0                   : 1
start                : 0
tuple                : 26 27
tuples               : 24 27

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . obj rig s0 goal
    (2) obj -> . OBJ COLON obj_sets

    OBJ             shift and go to state 1

    obj                            shift and go to state 3
    start                          shift and go to state 2

state 1

    (2) obj -> OBJ . COLON obj_sets

    COLON           shift and go to state 4


state 2

    (0) S' -> start .



state 3

    (1) start -> obj . rig s0 goal
    (3) rig -> . RIG COLON rig_rels

    RIG             shift and go to state 5

    rig                            shift and go to state 6

state 4

    (2) obj -> OBJ COLON . obj_sets
    (6) obj_sets -> .
    (7) obj_sets -> . ID EQUALS obj_set obj_sets

    RIG             reduce using rule 6 (obj_sets -> .)
    ID              shift and go to state 8

    obj_sets                       shift and go to state 7

state 5

    (3) rig -> RIG . COLON rig_rels

    COLON           shift and go to state 9


state 6

    (1) start -> obj rig . s0 goal
    (4) s0 -> . S0 COLON initial_state_atoms

    S0              shift and go to state 11

    s0                             shift and go to state 10

state 7

    (2) obj -> OBJ COLON obj_sets .

    RIG             reduce using rule 2 (obj -> OBJ COLON obj_sets .)


state 8

    (7) obj_sets -> ID . EQUALS obj_set obj_sets

    EQUALS          shift and go to state 12


state 9

    (3) rig -> RIG COLON . rig_rels
    (22) rig_rels -> .
    (23) rig_rels -> . ID EQUALS rig_rel rig_rels

    S0              reduce using rule 22 (rig_rels -> .)
    ID              shift and go to state 14

    rig_rels                       shift and go to state 13

state 10

    (1) start -> obj rig s0 . goal
    (5) goal -> . GOAL COLON goal_state_atoms

    GOAL            shift and go to state 16

    goal                           shift and go to state 15

state 11

    (4) s0 -> S0 . COLON initial_state_atoms

    COLON           shift and go to state 17


state 12

    (7) obj_sets -> ID EQUALS . obj_set obj_sets
    (8) obj_set -> . LBRACK INT RBRACK
    (9) obj_set -> . LBRACK FLOAT RBRACK
    (10) obj_set -> . LBRACK BOOL RBRACK
    (11) obj_set -> . LBRACK NIL RBRACK
    (12) obj_set -> . LBRACK obj_atoms

    LBRACK          shift and go to state 18

    obj_set                        shift and go to state 19

state 13

    (3) rig -> RIG COLON rig_rels .

    S0              reduce using rule 3 (rig -> RIG COLON rig_rels .)


state 14

    (23) rig_rels -> ID . EQUALS rig_rel rig_rels

    EQUALS          shift and go to state 20


state 15

    (1) start -> obj rig s0 goal .

    $end            reduce using rule 1 (start -> obj rig s0 goal .)


state 16

    (5) goal -> GOAL . COLON goal_state_atoms

    COLON           shift and go to state 21


state 17

    (4) s0 -> S0 COLON . initial_state_atoms
    (32) initial_state_atoms -> .
    (33) initial_state_atoms -> . ID LPAREN ids EQUALS obj_atom initial_state_atoms

    GOAL            reduce using rule 32 (initial_state_atoms -> .)
    ID              shift and go to state 22

    initial_state_atoms            shift and go to state 23

state 18

    (8) obj_set -> LBRACK . INT RBRACK
    (9) obj_set -> LBRACK . FLOAT RBRACK
    (10) obj_set -> LBRACK . BOOL RBRACK
    (11) obj_set -> LBRACK . NIL RBRACK
    (12) obj_set -> LBRACK . obj_atoms
    (13) obj_atoms -> . RBRACK
    (14) obj_atoms -> . obj_atom RBRACK
    (15) obj_atoms -> . obj_atom COMMA obj_atoms
    (16) obj_atom -> . ID
    (17) obj_atom -> . INT
    (18) obj_atom -> . FLOAT
    (19) obj_atom -> . TRUE
    (20) obj_atom -> . FALSE
    (21) obj_atom -> . NIL

    INT             shift and go to state 27
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 30
    NIL             shift and go to state 26
    RBRACK          shift and go to state 29
    ID              shift and go to state 33
    TRUE            shift and go to state 32
    FALSE           shift and go to state 25

    obj_atoms                      shift and go to state 28
    obj_atom                       shift and go to state 31

state 19

    (7) obj_sets -> ID EQUALS obj_set . obj_sets
    (6) obj_sets -> .
    (7) obj_sets -> . ID EQUALS obj_set obj_sets

    RIG             reduce using rule 6 (obj_sets -> .)
    ID              shift and go to state 8

    obj_sets                       shift and go to state 34

state 20

    (23) rig_rels -> ID EQUALS . rig_rel rig_rels
    (24) rig_rel -> . LBRACK tuples

    LBRACK          shift and go to state 35

    rig_rel                        shift and go to state 36

state 21

    (5) goal -> GOAL COLON . goal_state_atoms
    (34) goal_state_atoms -> .
    (35) goal_state_atoms -> . ID LPAREN ids EQUALS ID goal_state_atoms

    $end            reduce using rule 34 (goal_state_atoms -> .)
    ID              shift and go to state 38

    goal_state_atoms               shift and go to state 37

state 22

    (33) initial_state_atoms -> ID . LPAREN ids EQUALS obj_atom initial_state_atoms

    LPAREN          shift and go to state 39


state 23

    (4) s0 -> S0 COLON initial_state_atoms .

    GOAL            reduce using rule 4 (s0 -> S0 COLON initial_state_atoms .)


state 24

    (9) obj_set -> LBRACK FLOAT . RBRACK
    (18) obj_atom -> FLOAT .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 40
    COMMA           reduce using rule 18 (obj_atom -> FLOAT .)

  ! RBRACK          [ reduce using rule 18 (obj_atom -> FLOAT .) ]


state 25

    (20) obj_atom -> FALSE .

    RBRACK          reduce using rule 20 (obj_atom -> FALSE .)
    COMMA           reduce using rule 20 (obj_atom -> FALSE .)
    ID              reduce using rule 20 (obj_atom -> FALSE .)
    GOAL            reduce using rule 20 (obj_atom -> FALSE .)


state 26

    (11) obj_set -> LBRACK NIL . RBRACK
    (21) obj_atom -> NIL .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 41
    COMMA           reduce using rule 21 (obj_atom -> NIL .)

  ! RBRACK          [ reduce using rule 21 (obj_atom -> NIL .) ]


state 27

    (8) obj_set -> LBRACK INT . RBRACK
    (17) obj_atom -> INT .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 42
    COMMA           reduce using rule 17 (obj_atom -> INT .)

  ! RBRACK          [ reduce using rule 17 (obj_atom -> INT .) ]


state 28

    (12) obj_set -> LBRACK obj_atoms .

    ID              reduce using rule 12 (obj_set -> LBRACK obj_atoms .)
    RIG             reduce using rule 12 (obj_set -> LBRACK obj_atoms .)


state 29

    (13) obj_atoms -> RBRACK .

    ID              reduce using rule 13 (obj_atoms -> RBRACK .)
    RIG             reduce using rule 13 (obj_atoms -> RBRACK .)


state 30

    (10) obj_set -> LBRACK BOOL . RBRACK

    RBRACK          shift and go to state 43


state 31

    (14) obj_atoms -> obj_atom . RBRACK
    (15) obj_atoms -> obj_atom . COMMA obj_atoms

    RBRACK          shift and go to state 44
    COMMA           shift and go to state 45


state 32

    (19) obj_atom -> TRUE .

    RBRACK          reduce using rule 19 (obj_atom -> TRUE .)
    COMMA           reduce using rule 19 (obj_atom -> TRUE .)
    ID              reduce using rule 19 (obj_atom -> TRUE .)
    GOAL            reduce using rule 19 (obj_atom -> TRUE .)


state 33

    (16) obj_atom -> ID .

    RBRACK          reduce using rule 16 (obj_atom -> ID .)
    COMMA           reduce using rule 16 (obj_atom -> ID .)
    ID              reduce using rule 16 (obj_atom -> ID .)
    GOAL            reduce using rule 16 (obj_atom -> ID .)


state 34

    (7) obj_sets -> ID EQUALS obj_set obj_sets .

    RIG             reduce using rule 7 (obj_sets -> ID EQUALS obj_set obj_sets .)


state 35

    (24) rig_rel -> LBRACK . tuples
    (25) tuples -> . RBRACK
    (26) tuples -> . tuple RBRACK
    (27) tuples -> . tuple COMMA tuples
    (28) tuple -> . LPAREN ids

    RBRACK          shift and go to state 47
    LPAREN          shift and go to state 49

    tuples                         shift and go to state 48
    tuple                          shift and go to state 46

state 36

    (23) rig_rels -> ID EQUALS rig_rel . rig_rels
    (22) rig_rels -> .
    (23) rig_rels -> . ID EQUALS rig_rel rig_rels

    S0              reduce using rule 22 (rig_rels -> .)
    ID              shift and go to state 14

    rig_rels                       shift and go to state 50

state 37

    (5) goal -> GOAL COLON goal_state_atoms .

    $end            reduce using rule 5 (goal -> GOAL COLON goal_state_atoms .)


state 38

    (35) goal_state_atoms -> ID . LPAREN ids EQUALS ID goal_state_atoms

    LPAREN          shift and go to state 51


state 39

    (33) initial_state_atoms -> ID LPAREN . ids EQUALS obj_atom initial_state_atoms
    (29) ids -> . RPAREN
    (30) ids -> . ID RPAREN
    (31) ids -> . ID COMMA ids

    RPAREN          shift and go to state 52
    ID              shift and go to state 54

    ids                            shift and go to state 53

state 40

    (9) obj_set -> LBRACK FLOAT RBRACK .

    ID              reduce using rule 9 (obj_set -> LBRACK FLOAT RBRACK .)
    RIG             reduce using rule 9 (obj_set -> LBRACK FLOAT RBRACK .)


state 41

    (11) obj_set -> LBRACK NIL RBRACK .

    ID              reduce using rule 11 (obj_set -> LBRACK NIL RBRACK .)
    RIG             reduce using rule 11 (obj_set -> LBRACK NIL RBRACK .)


state 42

    (8) obj_set -> LBRACK INT RBRACK .

    ID              reduce using rule 8 (obj_set -> LBRACK INT RBRACK .)
    RIG             reduce using rule 8 (obj_set -> LBRACK INT RBRACK .)


state 43

    (10) obj_set -> LBRACK BOOL RBRACK .

    ID              reduce using rule 10 (obj_set -> LBRACK BOOL RBRACK .)
    RIG             reduce using rule 10 (obj_set -> LBRACK BOOL RBRACK .)


state 44

    (14) obj_atoms -> obj_atom RBRACK .

    ID              reduce using rule 14 (obj_atoms -> obj_atom RBRACK .)
    RIG             reduce using rule 14 (obj_atoms -> obj_atom RBRACK .)


state 45

    (15) obj_atoms -> obj_atom COMMA . obj_atoms
    (13) obj_atoms -> . RBRACK
    (14) obj_atoms -> . obj_atom RBRACK
    (15) obj_atoms -> . obj_atom COMMA obj_atoms
    (16) obj_atom -> . ID
    (17) obj_atom -> . INT
    (18) obj_atom -> . FLOAT
    (19) obj_atom -> . TRUE
    (20) obj_atom -> . FALSE
    (21) obj_atom -> . NIL

    RBRACK          shift and go to state 29
    ID              shift and go to state 33
    INT             shift and go to state 57
    FLOAT           shift and go to state 55
    TRUE            shift and go to state 32
    FALSE           shift and go to state 25
    NIL             shift and go to state 56

    obj_atom                       shift and go to state 31
    obj_atoms                      shift and go to state 58

state 46

    (26) tuples -> tuple . RBRACK
    (27) tuples -> tuple . COMMA tuples

    RBRACK          shift and go to state 59
    COMMA           shift and go to state 60


state 47

    (25) tuples -> RBRACK .

    ID              reduce using rule 25 (tuples -> RBRACK .)
    S0              reduce using rule 25 (tuples -> RBRACK .)


state 48

    (24) rig_rel -> LBRACK tuples .

    ID              reduce using rule 24 (rig_rel -> LBRACK tuples .)
    S0              reduce using rule 24 (rig_rel -> LBRACK tuples .)


state 49

    (28) tuple -> LPAREN . ids
    (29) ids -> . RPAREN
    (30) ids -> . ID RPAREN
    (31) ids -> . ID COMMA ids

    RPAREN          shift and go to state 52
    ID              shift and go to state 54

    ids                            shift and go to state 61

state 50

    (23) rig_rels -> ID EQUALS rig_rel rig_rels .

    S0              reduce using rule 23 (rig_rels -> ID EQUALS rig_rel rig_rels .)


state 51

    (35) goal_state_atoms -> ID LPAREN . ids EQUALS ID goal_state_atoms
    (29) ids -> . RPAREN
    (30) ids -> . ID RPAREN
    (31) ids -> . ID COMMA ids

    RPAREN          shift and go to state 52
    ID              shift and go to state 54

    ids                            shift and go to state 62

state 52

    (29) ids -> RPAREN .

    EQUALS          reduce using rule 29 (ids -> RPAREN .)
    RBRACK          reduce using rule 29 (ids -> RPAREN .)
    COMMA           reduce using rule 29 (ids -> RPAREN .)


state 53

    (33) initial_state_atoms -> ID LPAREN ids . EQUALS obj_atom initial_state_atoms

    EQUALS          shift and go to state 63


state 54

    (30) ids -> ID . RPAREN
    (31) ids -> ID . COMMA ids

    RPAREN          shift and go to state 65
    COMMA           shift and go to state 64


state 55

    (18) obj_atom -> FLOAT .

    RBRACK          reduce using rule 18 (obj_atom -> FLOAT .)
    COMMA           reduce using rule 18 (obj_atom -> FLOAT .)
    ID              reduce using rule 18 (obj_atom -> FLOAT .)
    GOAL            reduce using rule 18 (obj_atom -> FLOAT .)


state 56

    (21) obj_atom -> NIL .

    RBRACK          reduce using rule 21 (obj_atom -> NIL .)
    COMMA           reduce using rule 21 (obj_atom -> NIL .)
    ID              reduce using rule 21 (obj_atom -> NIL .)
    GOAL            reduce using rule 21 (obj_atom -> NIL .)


state 57

    (17) obj_atom -> INT .

    RBRACK          reduce using rule 17 (obj_atom -> INT .)
    COMMA           reduce using rule 17 (obj_atom -> INT .)
    ID              reduce using rule 17 (obj_atom -> INT .)
    GOAL            reduce using rule 17 (obj_atom -> INT .)


state 58

    (15) obj_atoms -> obj_atom COMMA obj_atoms .

    ID              reduce using rule 15 (obj_atoms -> obj_atom COMMA obj_atoms .)
    RIG             reduce using rule 15 (obj_atoms -> obj_atom COMMA obj_atoms .)


state 59

    (26) tuples -> tuple RBRACK .

    ID              reduce using rule 26 (tuples -> tuple RBRACK .)
    S0              reduce using rule 26 (tuples -> tuple RBRACK .)


state 60

    (27) tuples -> tuple COMMA . tuples
    (25) tuples -> . RBRACK
    (26) tuples -> . tuple RBRACK
    (27) tuples -> . tuple COMMA tuples
    (28) tuple -> . LPAREN ids

    RBRACK          shift and go to state 47
    LPAREN          shift and go to state 49

    tuples                         shift and go to state 66
    tuple                          shift and go to state 46

state 61

    (28) tuple -> LPAREN ids .

    RBRACK          reduce using rule 28 (tuple -> LPAREN ids .)
    COMMA           reduce using rule 28 (tuple -> LPAREN ids .)


state 62

    (35) goal_state_atoms -> ID LPAREN ids . EQUALS ID goal_state_atoms

    EQUALS          shift and go to state 67


state 63

    (33) initial_state_atoms -> ID LPAREN ids EQUALS . obj_atom initial_state_atoms
    (16) obj_atom -> . ID
    (17) obj_atom -> . INT
    (18) obj_atom -> . FLOAT
    (19) obj_atom -> . TRUE
    (20) obj_atom -> . FALSE
    (21) obj_atom -> . NIL

    ID              shift and go to state 33
    INT             shift and go to state 57
    FLOAT           shift and go to state 55
    TRUE            shift and go to state 32
    FALSE           shift and go to state 25
    NIL             shift and go to state 56

    obj_atom                       shift and go to state 68

state 64

    (31) ids -> ID COMMA . ids
    (29) ids -> . RPAREN
    (30) ids -> . ID RPAREN
    (31) ids -> . ID COMMA ids

    RPAREN          shift and go to state 52
    ID              shift and go to state 54

    ids                            shift and go to state 69

state 65

    (30) ids -> ID RPAREN .

    EQUALS          reduce using rule 30 (ids -> ID RPAREN .)
    RBRACK          reduce using rule 30 (ids -> ID RPAREN .)
    COMMA           reduce using rule 30 (ids -> ID RPAREN .)


state 66

    (27) tuples -> tuple COMMA tuples .

    ID              reduce using rule 27 (tuples -> tuple COMMA tuples .)
    S0              reduce using rule 27 (tuples -> tuple COMMA tuples .)


state 67

    (35) goal_state_atoms -> ID LPAREN ids EQUALS . ID goal_state_atoms

    ID              shift and go to state 70


state 68

    (33) initial_state_atoms -> ID LPAREN ids EQUALS obj_atom . initial_state_atoms
    (32) initial_state_atoms -> .
    (33) initial_state_atoms -> . ID LPAREN ids EQUALS obj_atom initial_state_atoms

    GOAL            reduce using rule 32 (initial_state_atoms -> .)
    ID              shift and go to state 22

    initial_state_atoms            shift and go to state 71

state 69

    (31) ids -> ID COMMA ids .

    EQUALS          reduce using rule 31 (ids -> ID COMMA ids .)
    RBRACK          reduce using rule 31 (ids -> ID COMMA ids .)
    COMMA           reduce using rule 31 (ids -> ID COMMA ids .)


state 70

    (35) goal_state_atoms -> ID LPAREN ids EQUALS ID . goal_state_atoms
    (34) goal_state_atoms -> .
    (35) goal_state_atoms -> . ID LPAREN ids EQUALS ID goal_state_atoms

    $end            reduce using rule 34 (goal_state_atoms -> .)
    ID              shift and go to state 38

    goal_state_atoms               shift and go to state 72

state 71

    (33) initial_state_atoms -> ID LPAREN ids EQUALS obj_atom initial_state_atoms .

    GOAL            reduce using rule 33 (initial_state_atoms -> ID LPAREN ids EQUALS obj_atom initial_state_atoms .)


state 72

    (35) goal_state_atoms -> ID LPAREN ids EQUALS ID goal_state_atoms .

    $end            reduce using rule 35 (goal_state_atoms -> ID LPAREN ids EQUALS ID goal_state_atoms .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACK in state 24 resolved as shift
WARNING: shift/reduce conflict for RBRACK in state 26 resolved as shift
WARNING: shift/reduce conflict for RBRACK in state 27 resolved as shift
